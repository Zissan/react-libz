(this["webpackJsonpreact-libz"]=this["webpackJsonpreact-libz"]||[]).push([[0],[,function(e,r,n){"use strict";var t=n(0),a=n.n(t),o=function(e){var r=e.htmlFor,n=e.label,t=e.required,o=void 0!==t&&t;return a.a.createElement("label",{style:{display:"block"},htmlFor:r},n," ",o&&a.a.createElement("span",{style:{color:"red"}},"*"))};n.d(r,"a",(function(){return o}))},,,,,,,function(e,r,n){"use strict";var t=n(7),a=n(0),o=n.n(a),i=n(1),l=function(e){var r=e.htmlId,n=e.name,a=e.label,l=e.type,s=void 0===l?"text":l,p=e.required,d=void 0!==p&&p,u=e.onChange,c=e.placeholder,m=e.value,h=e.error,g=e.children,y=Object(t.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]);return o.a.createElement("div",{style:{marginBottom:16}},o.a.createElement(i.a,{htmlFor:r,label:a,required:d}),o.a.createElement("input",Object.assign({id:r,type:s,name:n,placeholder:c,value:m,onChange:u,style:h&&{border:"solid 1px red"}},y)),g,h&&o.a.createElement("div",{className:"error",style:{color:"red"}},h))};n.d(r,"a",(function(){return l}))},function(e,r,n){"use strict";var t=n(10);n.d(r,"a",(function(){return t.a}))},function(e,r,n){"use strict";var t=n(0),a=n.n(t),o=function(e){return 100===e?"green":e>50?"lightgreen":"red"},i=function(e,r){return parseInt(e/100*r,10)};r.a=function(e){var r=e.percent,n=e.width,t=e.height,l=void 0===t?5:t;return a.a.createElement("div",{style:{width:n,border:"1px solid lightgray"}},a.a.createElement("div",{style:{width:i(r,n),height:l,backgroundColor:o(r)}}))}},,function(e,r,n){"use strict";var t=n(0),a=n.n(t),o=function(e){return a.a.createElement("svg",{width:"16",height:"16",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 22 22"},a.a.createElement("g",{transform:"matrix(.02146 0 0 .02146 1 1)",fill:"#4d4d4d"},a.a.createElement("path",{d:"m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1"}),a.a.createElement("circle",{cx:"466.08",cy:"466.02",r:"134.5"})))};n.d(r,"a",(function(){return o}))},function(e,r,n){"use strict";var t=n(11),a=n(7),o=n(0),i=n.n(o),l=n(8),s=n(12),p=n(10),d=function(e){var r=e.htmlId,n=e.value,d=e.label,u=void 0===d?"Password":d,c=e.error,m=e.onChange,h=e.placeholder,g=e.maxLength,y=void 0===g?50:g,f=e.showVisibilityToggle,b=void 0!==f&&f,x=e.quality,v=Object(a.a)(e,["htmlId","value","label","error","onChange","placeholder","maxLength","showVisibilityToggle","quality"]),w=Object(o.useState)(!1),E=Object(t.a)(w,2),q=E[0],I=E[1];return i.a.createElement(l.a,Object.assign({type:q?"text":"password",htmlId:r,value:n,label:u,error:c,onChange:m,placeholder:h,maxLength:y,required:!0},v),b&&i.a.createElement("a",{href:"#",onClick:function(e){e&&e.preventDefault(),I(!q)},style:{marginLeft:5}},i.a.createElement(s.a,null)),n&&n.length&&x&&i.a.createElement(p.a,{percent:x,width:130}))};n.d(r,"a",(function(){return d}))},function(e,r,n){},,,function(e,r){e.exports=[{name:"EyeIcon",description:"SVG Eye Icon",code:'import React from "react";\r\n/** SVG Eye Icon */\r\nconst EyeIcon = props => {\r\n  // Attribution: Fabi\xe1n Alexis at https://commons.wikimedia.org/wiki/File:Antu_view-preview.svg\r\n  return (\r\n    <svg\r\n      width="16"\r\n      height="16"\r\n      xmlns="http://www.w3.org/2000/svg"\r\n      viewBox="0 0 22 22"\r\n    >\r\n      <g transform="matrix(.02146 0 0 .02146 1 1)" fill="#4d4d4d">\r\n        <path d="m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1" />\r\n        <circle cx="466.08" cy="466.02" r="134.5" />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default EyeIcon;\r\n',examples:[{name:"Example",description:"",code:'import React from "react";\r\nimport EyeIcon from "react-libz/EyeIcon";\r\n\r\nconst Example = () => {\r\n  return <EyeIcon />;\r\n};\r\n\r\nexport default Example;\r\n'}]},{name:"HelloWorld",description:"A Hello World componet to demonstrate the use of react-docgen",props:{message:{type:{name:"string"},required:!1,description:"Message to display",defaultValue:{value:'"World"',computed:!1}}},code:'import React from "react";\r\nimport PropTypes from "prop-types";\r\n/** A Hello World componet to demonstrate the use of react-docgen */\r\nfunction HelloWorld({ message }) {\r\n  return <div>Hello {message}</div>;\r\n}\r\n\r\nHelloWorld.propTypes = {\r\n  /** Message to display */\r\n  message: PropTypes.string.isRequired\r\n};\r\n\r\nHelloWorld.defaultProps = {\r\n  message: "World"\r\n};\r\n\r\nexport default HelloWorld;\r\n',examples:[{name:"ExampleHelloWorld",description:"HelloWorld Component basic usage",code:'import React from "react";\r\nimport HelloWorld from "react-libz/HelloWorld";\r\n/** HelloWorld Component basic usage */\r\nfunction ExampleHelloWorld() {\r\n  return (\r\n    <div>\r\n      <HelloWorld message={"Test"} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExampleHelloWorld;\r\n'}]},{name:"Label",description:"Label with required field display, htmlFor and block styling",props:{htmlFor:{type:{name:"string"},required:!0,description:"ID of the HTML controls to be associated with the label"},label:{type:{name:"string"},required:!0,description:"Label text"},required:{type:{name:"bool"},required:!1,description:"Indicates whether the associated control is a required field if true",defaultValue:{value:"false",computed:!1}}},code:'import React from "react";\r\nimport PropTypes from "prop-types";\r\n/** Label with required field display, htmlFor and block styling */\r\nconst Label = ({ htmlFor, label, required = false }) => {\r\n  return (\r\n    <label style={{ display: "block" }} htmlFor={htmlFor}>\r\n      {label} {required && <span style={{ color: "red" }}>*</span>}\r\n    </label>\r\n  );\r\n};\r\n\r\nLabel.propTypes = {\r\n  /** ID of the HTML controls to be associated with the label */\r\n  htmlFor: PropTypes.string.isRequired,\r\n  /** Label text */\r\n  label: PropTypes.string.isRequired,\r\n  /** Indicates whether the associated control is a required field if true */\r\n  required: PropTypes.bool\r\n};\r\n\r\nexport default Label;\r\n',examples:[{name:"ExampleOptional",description:"Optional Label",code:'import React from "react";\r\nimport Label from "react-libz/Label";\r\n/** Optional Label */\r\nconst ExampleOptional = () => {\r\n  return (\r\n    <div>\r\n      <Label htmlFor="test" label="test" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExampleOptional;\r\n'},{name:"ExampleRequired",description:"Required Label",code:'import React from "react";\r\nimport Label from "react-libz/Label";\r\n/** Required Label */\r\nconst ExampleRequired = () => {\r\n  return (\r\n    <div>\r\n      <Label htmlFor="test" label="test" required />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExampleRequired;\r\n'}]},{name:"PasswordInput",description:"Password input with integrated label, quality tips, and show password toggle. It is a part of Specialization Pattern.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used by convention."},value:{type:{name:"any"},required:!1,description:"Password value"},label:{type:{name:"string"},required:!1,description:"Input label",defaultValue:{value:'"Password"',computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function called when password input value changes"},maxLength:{type:{name:"number"},required:!1,description:"Max password length accepted",defaultValue:{value:"50",computed:!1}},placeholder:{type:{name:"string"},required:!1,description:"Placeholder displayed when no password is entered"},showVisibilityToggle:{type:{name:"bool"},required:!1,description:"Set to true to show the toggle for displaying the currently entered password",defaultValue:{value:"false",computed:!1}},quality:{type:{name:"number"},required:!1,description:"Display password quality visually via ProgressBar, accepts a number between 0 and 100"},error:{type:{name:"string"},required:!1,description:"Validation error to display"}},code:'import React, { useState } from "react";\r\nimport PropTypes from "prop-types";\r\nimport TextInput from "../TextInput";\r\nimport EyeIcon from "../EyeIcon";\r\nimport ProgressBar from "../ProgressBar/ProgressBar";\r\n/** Password input with integrated label, quality tips, and show password toggle. It is a part of Specialization Pattern. */\r\nconst PasswordInput = ({\r\n  htmlId,\r\n  value,\r\n  label = "Password",\r\n  error,\r\n  onChange,\r\n  placeholder,\r\n  maxLength = 50,\r\n  showVisibilityToggle = false,\r\n  quality,\r\n  ...props\r\n}) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleVisibility = event => {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    setShowPassword(!showPassword);\r\n  };\r\n  return (\r\n    <TextInput\r\n      type={showPassword ? "text" : "password"}\r\n      htmlId={htmlId}\r\n      value={value}\r\n      label={label}\r\n      error={error}\r\n      onChange={onChange}\r\n      placeholder={placeholder}\r\n      maxLength={maxLength}\r\n      required\r\n      {...props}\r\n    >\r\n      {showVisibilityToggle && (\r\n        <a href="#" onClick={handleVisibility} style={{ marginLeft: 5 }}>\r\n          <EyeIcon />\r\n        </a>\r\n      )}\r\n      {value && value.length && quality && (\r\n        <ProgressBar percent={quality} width={130} />\r\n      )}\r\n    </TextInput>\r\n  );\r\n};\r\n\r\nPasswordInput.propTypes = {\r\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\r\n  htmlId: PropTypes.string.isRequired,\r\n\r\n  /** Input name. Recommend setting this to match object\'s property so a single change handler can be used by convention.*/\r\n  name: PropTypes.string.isRequired,\r\n\r\n  /** Password value */\r\n  value: PropTypes.any,\r\n\r\n  /** Input label */\r\n  label: PropTypes.string,\r\n\r\n  /** Function called when password input value changes */\r\n  onChange: PropTypes.func.isRequired,\r\n\r\n  /** Max password length accepted */\r\n  maxLength: PropTypes.number,\r\n\r\n  /** Placeholder displayed when no password is entered */\r\n  placeholder: PropTypes.string,\r\n\r\n  /** Set to true to show the toggle for displaying the currently entered password */\r\n  showVisibilityToggle: PropTypes.bool,\r\n\r\n  /** Display password quality visually via ProgressBar, accepts a number between 0 and 100 */\r\n  quality: PropTypes.number,\r\n\r\n  /** Validation error to display */\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default PasswordInput;\r\n',examples:[{name:"ExampleAllFeatures",description:"",code:'import React, { useState } from "react";\r\nimport PasswordInput from "react-libz/PasswordInput";\r\n\r\nconst ExampleAllFeatures = () => {\r\n  const [value, setValue] = useState("");\r\n  const handleChange = ({ target }) => {\r\n    setValue(target.value);\r\n  };\r\n\r\n  const getQuality = () => {\r\n    return value.length > 10 ? 100 : value.length * 10;\r\n  };\r\n  return (\r\n    <div>\r\n      <PasswordInput\r\n        htmlId="password-input-export-all-features"\r\n        name="password"\r\n        value={value}\r\n        onChange={handleChange}\r\n        quality={getQuality()}\r\n        placeholder="Enter Password"\r\n        showVisibilityToggle\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExampleAllFeatures;\r\n'}]},{name:"ProgressBar",description:"",props:{percent:{type:{name:"number"},required:!0,description:"Percent of progress completed"},width:{type:{name:"number"},required:!0,description:"Width of the progress bar"},height:{type:{name:"number"},required:!1,description:"Height of the progress bar",defaultValue:{value:"5",computed:!1}}},code:'import React from "react";\r\nimport PropTypes from "prop-types";\r\n\r\nconst getColor = percent => {\r\n  if (percent === 100) {\r\n    return "green";\r\n  }\r\n\r\n  if (percent > 50) {\r\n    return "lightgreen";\r\n  }\r\n  return "red";\r\n};\r\n\r\nexport const getProgressWidth = (percent, width) => {\r\n  return parseInt((percent / 100) * width, 10);\r\n};\r\n\r\nconst ProgressBar = ({ percent, width, height = 5 }) => {\r\n  return (\r\n    <div style={{ width: width, border: "1px solid lightgray" }}>\r\n      <div\r\n        style={{\r\n          width: getProgressWidth(percent, width),\r\n          height,\r\n          backgroundColor: getColor(percent)\r\n        }}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProgressBar.propTypes = {\r\n  /** Percent of progress completed */\r\n  percent: PropTypes.number.isRequired,\r\n  /** Width of the progress bar */\r\n  width: PropTypes.number.isRequired,\r\n  /** Height of the progress bar */\r\n  height: PropTypes.number.isRequired\r\n};\r\n\r\nexport default ProgressBar;\r\n',examples:[{name:"Example100Percent",description:"100% Progress and height 20px",code:'import React from "react";\r\nimport ProgressBar from "react-libz/ProgressBar";\r\n/** 100% Progress and height 20px */\r\nconst Example100Percent = () => {\r\n  return (\r\n    <div>\r\n      <ProgressBar width={150} percent={100} height={20} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Example100Percent;\r\n'},{name:"Example10Percent",description:"10% Progress",code:'import React from "react";\r\nimport ProgressBar from "react-libz/ProgressBar";\r\n/** 10% Progress */\r\nconst Example10Percent = () => {\r\n  return (\r\n    <div>\r\n      <ProgressBar width={150} percent={10} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Example10Percent;\r\n'},{name:"Example70Percent",description:"70% Progress",code:'import React from "react";\r\nimport ProgressBar from "react-libz/ProgressBar";\r\n/** 70% Progress */\r\nconst Example70Percent = () => {\r\n  return (\r\n    <div>\r\n      <ProgressBar width={150} percent={70} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Example70Percent;\r\n'}]},{name:"RegistrationForm",description:"Registration form with built-in validation.",props:{confirmationMessage:{type:{name:"string"},required:!1,description:"Message displayed upon successful submission",defaultValue:{value:'"Thanks for registering!"',computed:!1}},onSubmit:{type:{name:"func"},required:!0,description:"Called when form is submitted"},minPasswordLength:{type:{name:"number"},required:!1,description:"Minimum password length",defaultValue:{value:"8",computed:!1}}},code:'import React from "react";\r\nimport PropTypes from "prop-types";\r\nimport TextInput from "../TextInput";\r\nimport PasswordInput from "../PasswordInput";\r\n\r\n/** Registration form with built-in validation. */\r\nclass RegistrationForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      user: {\r\n        email: "",\r\n        password: ""\r\n      },\r\n      errors: {},\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n  onChange = event => {\r\n    const user = this.state.user;\r\n    user[event.target.name] = event.target.value;\r\n    this.setState({ user });\r\n  };\r\n\r\n  // Returns a number from 0 to 100 that represents password quality.\r\n  // For simplicity, just returning % of min length entered.\r\n  // Could enhance with checks for number, special char, unique characters, etc.\r\n  passwordQuality(password) {\r\n    if (!password) return null;\r\n    if (password.length >= this.props.minPasswordLength) return 100;\r\n    const percentOfMinLength = parseInt(\r\n      (password.length / this.props.minPasswordLength) * 100,\r\n      10\r\n    );\r\n    return percentOfMinLength;\r\n  }\r\n\r\n  validate({ email, password }) {\r\n    const errors = {};\r\n    const { minPasswordLength } = this.props;\r\n\r\n    if (!email) errors.email = "Email required.";\r\n    if (password.length < minPasswordLength)\r\n      errors.password = `Password must be at least ${minPasswordLength} characters.`;\r\n\r\n    this.setState({ errors });\r\n    const formIsValid = Object.getOwnPropertyNames(errors).length === 0;\r\n    return formIsValid;\r\n  }\r\n\r\n  onSubmit = () => {\r\n    const { user } = this.state;\r\n    const formIsValid = this.validate(user);\r\n    if (formIsValid) {\r\n      this.props.onSubmit(user);\r\n      this.setState({ submitted: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { errors, submitted } = this.state;\r\n    const { email, password } = this.state.user;\r\n\r\n    return submitted ? (\r\n      <h2>{this.props.confirmationMessage}</h2>\r\n    ) : (\r\n      <div>\r\n        <TextInput\r\n          htmlId="registration-form-email"\r\n          name="email"\r\n          onChange={this.onChange}\r\n          label="Email"\r\n          value={email}\r\n          error={errors.email}\r\n          required\r\n        />\r\n\r\n        <PasswordInput\r\n          htmlId="registration-form-password"\r\n          name="password"\r\n          value={password}\r\n          onChange={this.onChange}\r\n          quality={this.passwordQuality(password)}\r\n          showVisibilityToggle\r\n          maxLength={50}\r\n          error={errors.password}\r\n        />\r\n\r\n        <input type="submit" value="Register" onClick={this.onSubmit} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegistrationForm.propTypes = {\r\n  /** Message displayed upon successful submission */\r\n  confirmationMessage: PropTypes.string,\r\n\r\n  /** Called when form is submitted */\r\n  onSubmit: PropTypes.func.isRequired,\r\n\r\n  /** Minimum password length */\r\n  minPasswordLength: PropTypes.number\r\n};\r\n\r\nRegistrationForm.defaultProps = {\r\n  confirmationMessage: "Thanks for registering!",\r\n  minPasswordLength: 8\r\n};\r\n\r\nexport default RegistrationForm;\r\n',examples:[{name:"ExampleRegistrationForm",description:"",code:'import React from "react";\r\nimport RegistrationForm from "react-libz/RegistrationForm";\r\n\r\nexport default class ExampleRegistrationForm extends React.Component {\r\n  onSubmit = user => {\r\n    console.log(user);\r\n  };\r\n\r\n  render() {\r\n    return <RegistrationForm onSubmit={this.onSubmit} />;\r\n  }\r\n}\r\n'}]},{name:"TextInput",description:"Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. It is a Opinionated building block.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:'"text"',computed:!1},{value:'"number"',computed:!1},{value:'"password"',computed:!1}]},required:!1,description:"Input type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:'import React from "react";\r\nimport PropTypes from "prop-types";\r\nimport Label from "../Label";\r\n\r\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. It is a Opinionated building block.*/\r\nconst TextInput = ({\r\n  htmlId,\r\n  name,\r\n  label,\r\n  type = "text",\r\n  required = false,\r\n  onChange,\r\n  placeholder,\r\n  value,\r\n  error,\r\n  children,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div style={{ marginBottom: 16 }}>\r\n      <Label htmlFor={htmlId} label={label} required={required} />\r\n      <input\r\n        id={htmlId}\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        style={error && { border: "solid 1px red" }}\r\n        {...props}\r\n      />\r\n      {children}\r\n      {error && (\r\n        <div className="error" style={{ color: "red" }}>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInput.propTypes = {\r\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\r\n  htmlId: PropTypes.string.isRequired,\r\n\r\n  /** Input name. Recommend setting this to match object\'s property so a single change handler can be used. */\r\n  name: PropTypes.string.isRequired,\r\n\r\n  /** Input label */\r\n  label: PropTypes.string.isRequired,\r\n\r\n  /** Input type */\r\n  type: PropTypes.oneOf(["text", "number", "password"]),\r\n\r\n  /** Mark label with asterisk if set to true */\r\n  required: PropTypes.bool,\r\n\r\n  /** Function to call onChange */\r\n  onChange: PropTypes.func.isRequired,\r\n\r\n  /** Placeholder to display when empty */\r\n  placeholder: PropTypes.string,\r\n\r\n  /** Value */\r\n  value: PropTypes.any,\r\n\r\n  /** String to display when error occurs */\r\n  error: PropTypes.string,\r\n\r\n  /** Child component to display next to the input */\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default TextInput;\r\n',examples:[{name:"ExampleError",description:"Required TextBox with error",code:'import React from "react";\r\nimport TextInput from "react-libz/TextInput";\r\n/** Required TextBox with error */\r\nconst ExampleError = () => {\r\n  return (\r\n    <TextInput\r\n      htmlId="example-optional"\r\n      label="First Name"\r\n      name="firstname"\r\n      onChange={() => {}}\r\n      required\r\n      error="First name is required."\r\n    />\r\n  );\r\n};\r\n\r\nexport default ExampleError;\r\n'},{name:"ExampleOption",description:"Optional Textbox",code:'import React from "react";\r\nimport TextInput from "react-libz/TextInput";\r\n/** Optional Textbox */\r\nconst ExampleOption = () => {\r\n  return (\r\n    <TextInput\r\n      htmlId="example-optional"\r\n      label="First Name"\r\n      name="firstName"\r\n      onChange={() => {}}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ExampleOption;\r\n'}]},{name:"TextInputBEM",description:"Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. It is a Opinionated building block.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:'"text"',computed:!1},{value:'"number"',computed:!1},{value:'"password"',computed:!1}]},required:!1,description:"Input type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:'import React from "react";\r\nimport PropTypes from "prop-types";\r\nimport Label from "../Label";\r\n\r\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. It is a Opinionated building block.*/\r\nconst TextInputBEM = ({\r\n  htmlId,\r\n  name,\r\n  label,\r\n  type = "text",\r\n  required = false,\r\n  onChange,\r\n  placeholder,\r\n  value,\r\n  error,\r\n  children,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className={"textInput"}>\r\n      <Label htmlFor={htmlId} label={label} required={required} />\r\n      <input\r\n        id={htmlId}\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        className={error && "textInput__input--error"}\r\n        {...props}\r\n      />\r\n      {children}\r\n      {error && <div className="textInput__error">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputBEM.propTypes = {\r\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\r\n  htmlId: PropTypes.string.isRequired,\r\n\r\n  /** Input name. Recommend setting this to match object\'s property so a single change handler can be used. */\r\n  name: PropTypes.string.isRequired,\r\n\r\n  /** Input label */\r\n  label: PropTypes.string.isRequired,\r\n\r\n  /** Input type */\r\n  type: PropTypes.oneOf(["text", "number", "password"]),\r\n\r\n  /** Mark label with asterisk if set to true */\r\n  required: PropTypes.bool,\r\n\r\n  /** Function to call onChange */\r\n  onChange: PropTypes.func.isRequired,\r\n\r\n  /** Placeholder to display when empty */\r\n  placeholder: PropTypes.string,\r\n\r\n  /** Value */\r\n  value: PropTypes.any,\r\n\r\n  /** String to display when error occurs */\r\n  error: PropTypes.string,\r\n\r\n  /** Child component to display next to the input */\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default TextInputBEM;\r\n',examples:[{name:"ExampleError",description:"Required TextBox with error",code:'import React from "react";\r\nimport TextInputBEM from "react-libz/TextInputBEM";\r\n/** Required TextBox with error */\r\nconst ExampleError = () => {\r\n  return (\r\n    <TextInputBEM\r\n      htmlId="example-optional"\r\n      label="First Name"\r\n      name="firstname"\r\n      onChange={() => {}}\r\n      required\r\n      error="First name is required."\r\n    />\r\n  );\r\n};\r\n\r\nexport default ExampleError;\r\n'}]},{name:"TextInputCSSModules",description:"Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. It is a Opinionated building block.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:'"text"',computed:!1},{value:'"number"',computed:!1},{value:'"password"',computed:!1}]},required:!1,description:"Input type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:'import React from "react";\r\nimport PropTypes from "prop-types";\r\nimport Label from "../Label";\r\nimport styles from "./TextInputCSSModules.css";\r\n\r\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. It is a Opinionated building block.*/\r\nconst TextInputCSSModules = ({\r\n  htmlId,\r\n  name,\r\n  label,\r\n  type = "text",\r\n  required = false,\r\n  onChange,\r\n  placeholder,\r\n  value,\r\n  error,\r\n  children,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className={styles.fieldset}>\r\n      <Label htmlFor={htmlId} label={label} required={required} />\r\n      <input\r\n        id={htmlId}\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        className={error && styles.inputError}\r\n        {...props}\r\n      />\r\n      {children}\r\n      {error && <div className={styles.error}>{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputCSSModules.propTypes = {\r\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\r\n  htmlId: PropTypes.string.isRequired,\r\n\r\n  /** Input name. Recommend setting this to match object\'s property so a single change handler can be used. */\r\n  name: PropTypes.string.isRequired,\r\n\r\n  /** Input label */\r\n  label: PropTypes.string.isRequired,\r\n\r\n  /** Input type */\r\n  type: PropTypes.oneOf(["text", "number", "password"]),\r\n\r\n  /** Mark label with asterisk if set to true */\r\n  required: PropTypes.bool,\r\n\r\n  /** Function to call onChange */\r\n  onChange: PropTypes.func.isRequired,\r\n\r\n  /** Placeholder to display when empty */\r\n  placeholder: PropTypes.string,\r\n\r\n  /** Value */\r\n  value: PropTypes.any,\r\n\r\n  /** String to display when error occurs */\r\n  error: PropTypes.string,\r\n\r\n  /** Child component to display next to the input */\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default TextInputCSSModules;\r\n',examples:[{name:"ExampleError",description:"Required TextBox with error",code:'import React from "react";\r\nimport TextInputCSSModules from "react-libz/TextInputCSSModules";\r\n/** Required TextBox with error */\r\nconst ExampleError = () => {\r\n  return (\r\n    <TextInputCSSModules\r\n      htmlId="example-optional"\r\n      label="First Name"\r\n      name="firstname"\r\n      onChange={() => {}}\r\n      required\r\n      error="First name is required."\r\n    />\r\n  );\r\n};\r\n\r\nexport default ExampleError;\r\n'}]},{name:"TextInputStyledComponents",description:"Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. It is a Opinionated building block.",props:{htmlId:{type:{name:"string"},required:!0,description:"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing."},name:{type:{name:"string"},required:!0,description:"Input name. Recommend setting this to match object's property so a single change handler can be used."},label:{type:{name:"string"},required:!0,description:"Input label"},type:{type:{name:"enum",value:[{value:'"text"',computed:!1},{value:'"number"',computed:!1},{value:'"password"',computed:!1}]},required:!1,description:"Input type",defaultValue:{value:'"text"',computed:!1}},required:{type:{name:"bool"},required:!1,description:"Mark label with asterisk if set to true",defaultValue:{value:"false",computed:!1}},onChange:{type:{name:"func"},required:!0,description:"Function to call onChange"},placeholder:{type:{name:"string"},required:!1,description:"Placeholder to display when empty"},value:{type:{name:"any"},required:!1,description:"Value"},error:{type:{name:"string"},required:!1,description:"String to display when error occurs"},children:{type:{name:"node"},required:!1,description:"Child component to display next to the input"}},code:'import React from "react";\r\nimport PropTypes from "prop-types";\r\nimport Label from "../Label";\r\nimport styled from "styled-components";\r\n\r\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. It is a Opinionated building block.*/\r\nconst TextInputStyledComponents = ({\r\n  htmlId,\r\n  name,\r\n  label,\r\n  type = "text",\r\n  required = false,\r\n  onChange,\r\n  placeholder,\r\n  value,\r\n  error,\r\n  children,\r\n  ...props\r\n}) => {\r\n  const FieldSet = styled.div`\r\n    margin-bottom: 16px;\r\n  `;\r\n\r\n  const Input = styled.input`\r\n    border: ${error ? "1px solid red" : ""};\r\n  `;\r\n\r\n  const Error = styled.div`\r\n    color: red;\r\n  `;\r\n\r\n  return (\r\n    <FieldSet>\r\n      <Label htmlFor={htmlId} label={label} required={required} />\r\n      <Input\r\n        id={htmlId}\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        {...props}\r\n      />\r\n      {children}\r\n      {error && <Error>{error}</Error>}\r\n    </FieldSet>\r\n  );\r\n};\r\n\r\nTextInputStyledComponents.propTypes = {\r\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\r\n  htmlId: PropTypes.string.isRequired,\r\n\r\n  /** Input name. Recommend setting this to match object\'s property so a single change handler can be used. */\r\n  name: PropTypes.string.isRequired,\r\n\r\n  /** Input label */\r\n  label: PropTypes.string.isRequired,\r\n\r\n  /** Input type */\r\n  type: PropTypes.oneOf(["text", "number", "password"]),\r\n\r\n  /** Mark label with asterisk if set to true */\r\n  required: PropTypes.bool,\r\n\r\n  /** Function to call onChange */\r\n  onChange: PropTypes.func.isRequired,\r\n\r\n  /** Placeholder to display when empty */\r\n  placeholder: PropTypes.string,\r\n\r\n  /** Value */\r\n  value: PropTypes.any,\r\n\r\n  /** String to display when error occurs */\r\n  error: PropTypes.string,\r\n\r\n  /** Child component to display next to the input */\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default TextInputStyledComponents;\r\n',examples:[{name:"ExampleError",description:"Required TextBox with error",code:'import React from "react";\r\nimport TextInputStyledComponents from "react-libz/TextInputStyledComponents";\r\n\r\n/** Required TextBox with error */\r\nconst ExampleError = () => {\r\n  return (\r\n    <TextInputStyledComponents\r\n      htmlId="example-optional"\r\n      label="First Name"\r\n      name="firstname"\r\n      onChange={() => {}}\r\n      required\r\n      error="First name is required."\r\n    />\r\n  );\r\n};\r\n\r\nexport default ExampleError;\r\n'}]}]},,,,,function(e,r,n){"use strict";n.r(r);var t=n(0),a=n.n(t),o=n(12);r.default=function(){return a.a.createElement(o.a,null)}},function(e,r,n){"use strict";n.r(r);var t=n(0),a=n.n(t),o=n(1);r.default=function(){return a.a.createElement("div",null,a.a.createElement(o.a,{htmlFor:"test",label:"test"}))}},function(e,r,n){"use strict";n.r(r);var t=n(0),a=n.n(t),o=n(1);r.default=function(){return a.a.createElement("div",null,a.a.createElement(o.a,{htmlFor:"test",label:"test",required:!0}))}},function(e,r,n){"use strict";n.r(r);var t=n(11),a=n(0),o=n.n(a),i=n(13);r.default=function(){var e=Object(a.useState)(""),r=Object(t.a)(e,2),n=r[0],l=r[1];return o.a.createElement("div",null,o.a.createElement(i.a,{htmlId:"password-input-export-all-features",name:"password",value:n,onChange:function(e){var r=e.target;l(r.value)},quality:n.length>10?100:10*n.length,placeholder:"Enter Password",showVisibilityToggle:!0}))}},function(e,r,n){"use strict";n.r(r);var t=n(0),a=n.n(t),o=n(9);r.default=function(){return a.a.createElement("div",null,a.a.createElement(o.a,{width:150,percent:100,height:20}))}},function(e,r,n){"use strict";n.r(r);var t=n(0),a=n.n(t),o=n(9);r.default=function(){return a.a.createElement("div",null,a.a.createElement(o.a,{width:150,percent:10}))}},function(e,r,n){"use strict";n.r(r);var t=n(0),a=n.n(t),o=n(9);r.default=function(){return a.a.createElement("div",null,a.a.createElement(o.a,{width:150,percent:70}))}},function(e,r,n){"use strict";n.r(r);var t=n(0),a=n.n(t),o=n(8);r.default=function(){return a.a.createElement(o.a,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){},required:!0,error:"First name is required."})}},function(e,r,n){"use strict";n.r(r);var t=n(0),a=n.n(t),o=n(8);r.default=function(){return a.a.createElement(o.a,{htmlId:"example-optional",label:"First Name",name:"firstName",onChange:function(){}})}},function(e,r,n){"use strict";n.r(r);var t=n(0),a=n.n(t),o=n(7),i=n(1),l=n(14),s=n.n(l),p=function(e){var r=e.htmlId,n=e.name,t=e.label,l=e.type,p=void 0===l?"text":l,d=e.required,u=void 0!==d&&d,c=e.onChange,m=e.placeholder,h=e.value,g=e.error,y=e.children,f=Object(o.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]);return a.a.createElement("div",{className:s.a.fieldset},a.a.createElement(i.a,{htmlFor:r,label:t,required:u}),a.a.createElement("input",Object.assign({id:r,type:p,name:n,placeholder:m,value:h,onChange:c,className:g&&s.a.inputError},f)),y,g&&a.a.createElement("div",{className:s.a.error},g))};r.default=function(){return a.a.createElement(p,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){},required:!0,error:"First name is required."})}},function(e,r,n){"use strict";n.r(r);var t=n(0),a=n.n(t),o=n(15),i=n(7),l=n(1),s=n(16);function p(){var e=Object(o.a)(["\n    color: red;\n  "]);return p=function(){return e},e}function d(){var e=Object(o.a)(["\n    border: ",";\n  "]);return d=function(){return e},e}function u(){var e=Object(o.a)(["\n    margin-bottom: 16px;\n  "]);return u=function(){return e},e}var c=function(e){var r=e.htmlId,n=e.name,t=e.label,o=e.type,c=void 0===o?"text":o,m=e.required,h=void 0!==m&&m,g=e.onChange,y=e.placeholder,f=e.value,b=e.error,x=e.children,v=Object(i.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]),w=s.a.div(u()),E=s.a.input(d(),b?"1px solid red":""),q=s.a.div(p());return a.a.createElement(w,null,a.a.createElement(l.a,{htmlFor:r,label:t,required:h}),a.a.createElement(E,Object.assign({id:r,type:c,name:n,placeholder:y,value:f,onChange:g},v)),x,b&&a.a.createElement(q,null,b))};r.default=function(){return a.a.createElement(c,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){},required:!0,error:"First name is required."})}},function(e,r,n){"use strict";n.r(r);var t=n(0),a=n.n(t);function o(e){var r=e.message;return a.a.createElement("div",null,"Hello ",r)}o.defaultProps={message:"World"};var i=o;r.default=function(){return a.a.createElement("div",null,a.a.createElement(i,{message:"Test"}))}},function(e,r,n){"use strict";n.r(r);var t=n(2),a=n(3),o=n(5),i=n(4),l=n(6),s=n(0),p=n.n(s),d=n(8),u=n(13),c=function(e){function r(e){var n;return Object(t.a)(this,r),(n=Object(o.a)(this,Object(i.a)(r).call(this,e))).onChange=function(e){var r=n.state.user;r[e.target.name]=e.target.value,n.setState({user:r})},n.onSubmit=function(){var e=n.state.user;n.validate(e)&&(n.props.onSubmit(e),n.setState({submitted:!0}))},n.state={user:{email:"",password:""},errors:{},submitted:!1},n}return Object(l.a)(r,e),Object(a.a)(r,[{key:"passwordQuality",value:function(e){return e?e.length>=this.props.minPasswordLength?100:parseInt(e.length/this.props.minPasswordLength*100,10):null}},{key:"validate",value:function(e){var r=e.email,n=e.password,t={},a=this.props.minPasswordLength;return r||(t.email="Email required."),n.length<a&&(t.password="Password must be at least ".concat(a," characters.")),this.setState({errors:t}),0===Object.getOwnPropertyNames(t).length}},{key:"render",value:function(){var e=this.state,r=e.errors,n=e.submitted,t=this.state.user,a=t.email,o=t.password;return n?p.a.createElement("h2",null,this.props.confirmationMessage):p.a.createElement("div",null,p.a.createElement(d.a,{htmlId:"registration-form-email",name:"email",onChange:this.onChange,label:"Email",value:a,error:r.email,required:!0}),p.a.createElement(u.a,{htmlId:"registration-form-password",name:"password",value:o,onChange:this.onChange,quality:this.passwordQuality(o),showVisibilityToggle:!0,maxLength:50,error:r.password}),p.a.createElement("input",{type:"submit",value:"Register",onClick:this.onSubmit}))}}]),r}(p.a.Component);c.defaultProps={confirmationMessage:"Thanks for registering!",minPasswordLength:8};var m=c;n.d(r,"default",(function(){return h}));var h=function(e){function r(){var e,n;Object(t.a)(this,r);for(var a=arguments.length,l=new Array(a),s=0;s<a;s++)l[s]=arguments[s];return(n=Object(o.a)(this,(e=Object(i.a)(r)).call.apply(e,[this].concat(l)))).onSubmit=function(e){console.log(e)},n}return Object(l.a)(r,e),Object(a.a)(r,[{key:"render",value:function(){return p.a.createElement(m,{onSubmit:this.onSubmit})}}]),r}(p.a.Component)},function(e,r,n){"use strict";n.r(r);var t=n(0),a=n.n(t),o=(n(50),n(7)),i=n(1),l=function(e){var r=e.htmlId,n=e.name,t=e.label,l=e.type,s=void 0===l?"text":l,p=e.required,d=void 0!==p&&p,u=e.onChange,c=e.placeholder,m=e.value,h=e.error,g=e.children,y=Object(o.a)(e,["htmlId","name","label","type","required","onChange","placeholder","value","error","children"]);return a.a.createElement("div",{className:"textInput"},a.a.createElement(i.a,{htmlFor:r,label:t,required:d}),a.a.createElement("input",Object.assign({id:r,type:s,name:n,placeholder:c,value:m,onChange:u,className:h&&"textInput__input--error"},y)),g,h&&a.a.createElement("div",{className:"textInput__error"},h))};r.default=function(){return a.a.createElement(l,{htmlId:"example-optional",label:"First Name",name:"firstname",onChange:function(){},required:!0,error:"First name is required."})}},,,,,,,function(e,r,n){e.exports=n(53)},,,,,function(e,r,n){},,function(e,r,n){var t={"./EyeIcon/Example":22,"./EyeIcon/Example.js":22,"./HelloWorld/ExampleHelloWorld":33,"./HelloWorld/ExampleHelloWorld.js":33,"./Label/ExampleOptional":23,"./Label/ExampleOptional.js":23,"./Label/ExampleRequired":24,"./Label/ExampleRequired.js":24,"./PasswordInput/ExampleAllFeatures":25,"./PasswordInput/ExampleAllFeatures.js":25,"./ProgressBar/Example100Percent":26,"./ProgressBar/Example100Percent.js":26,"./ProgressBar/Example10Percent":27,"./ProgressBar/Example10Percent.js":27,"./ProgressBar/Example70Percent":28,"./ProgressBar/Example70Percent.js":28,"./RegistrationForm/ExampleRegistrationForm":34,"./RegistrationForm/ExampleRegistrationForm.js":34,"./TextInput/ExampleError":29,"./TextInput/ExampleError.js":29,"./TextInput/ExampleOption":30,"./TextInput/ExampleOption.js":30,"./TextInputBEM/ExampleError":35,"./TextInputBEM/ExampleError.js":35,"./TextInputCSSModules/ExampleError":31,"./TextInputCSSModules/ExampleError.js":31,"./TextInputStyledComponents/ExampleError":32,"./TextInputStyledComponents/ExampleError.js":32};function a(e){var r=o(e);return n(r)}function o(e){if(!n.o(t,e)){var r=new Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r}return t[e]}a.keys=function(){return Object.keys(t)},a.resolve=o,e.exports=a,a.id=49},function(e,r,n){},,,function(e,r,n){"use strict";n.r(r);var t=n(0),a=n.n(t),o=n(36),i=n.n(o),l=(n(47),n(48),n(2)),s=n(3),p=n(5),d=n(4),u=n(6),c=function(e){var r=e.components;return a.a.createElement("ul",{className:"navigation"},r.map((function(e){return a.a.createElement("li",{key:e},a.a.createElement("a",{href:"#".concat(e)},e))})))},m=n(19),h=n.n(m),g=n(37),y=n.n(g),f=function(e){function r(){return Object(l.a)(this,r),Object(p.a)(this,Object(d.a)(r).apply(this,arguments))}return Object(u.a)(r,e),Object(s.a)(r,[{key:"componentDidMount",value:function(){h.a.registerLanguage("javascript",y.a),h.a.highlightBlock(this.element)}},{key:"render",value:function(){var e=this;return a.a.createElement("pre",{ref:function(r){e.element=r}},a.a.createElement("code",null,this.props.children))}}]),r}(a.a.Component),b=function(e){function r(e){var n;return Object(l.a)(this,r),(n=Object(p.a)(this,Object(d.a)(r).call(this,e))).toggleCode=function(e){e.preventDefault(),n.setState((function(e){return{showCode:!e.showCode}}))},n.state={showCode:!1},n}return Object(u.a)(r,e),Object(s.a)(r,[{key:"render",value:function(){var e=this.state.showCode,r=this.props.example,t=r.code,o=r.description,i=r.name,l=n(49)("./".concat(this.props.componentName,"/").concat(i)).default;return a.a.createElement("div",{className:"example"},o&&a.a.createElement("h4",null,o),a.a.createElement(l,null),a.a.createElement("p",null,a.a.createElement("a",{href:"",onClick:this.toggleCode},e?"Hide":"Show"," Code")),e&&a.a.createElement(f,null,t))}}]),r}(a.a.Component),x=function(e){var r=e.props;return a.a.createElement("table",{className:"props"},a.a.createElement("thead",null,a.a.createElement("tr",null,a.a.createElement("th",null,"Name"),a.a.createElement("th",null,"Description"),a.a.createElement("th",null,"Type"),a.a.createElement("th",null,"Default"),a.a.createElement("th",null,"Required"))),a.a.createElement("tbody",null,Object.keys(r).map((function(e){return a.a.createElement("tr",{key:e},a.a.createElement("td",null,e),a.a.createElement("td",null,r[e].description),a.a.createElement("td",null,r[e].type.name),a.a.createElement("td",null,r[e].defaultValue&&r[e].defaultValue.value),a.a.createElement("td",null,r[e].required&&"X"))}))))},v=function(e){var r=e.component,n=r.name,t=r.description,o=r.props,i=r.examples;return a.a.createElement("div",{className:"componentpage"},a.a.createElement("h2",null,n),a.a.createElement("p",null,t),a.a.createElement("h3",null,"Example",i.length>1&&"s"),i.length>0?i.map((function(e){return a.a.createElement(b,{key:e.code,example:e,componentName:n})})):"No examples exist.",a.a.createElement("h3",null,"Props"),o?a.a.createElement(x,{props:o}):"This component accepts no props.")},w=n(17),E=n.n(w),q=function(e){function r(e){var n;return Object(l.a)(this,r),(n=Object(p.a)(this,Object(d.a)(r).call(this,e))).state={route:window.location.hash.substr(1)},n}return Object(u.a)(r,e),Object(s.a)(r,[{key:"componentDidMount",value:function(){var e=this;window.addEventListener("hashchange",(function(){e.setState({route:window.location.hash.substr(1)})}))}},{key:"render",value:function(){var e=this.state.route,r=e?E.a.filter((function(r){return r.name===e}))[0]:E.a[0];return a.a.createElement("div",null,a.a.createElement(c,{components:E.a.map((function(e){return e.name}))}),a.a.createElement(v,{component:r}))}}]),r}(t.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(a.a.createElement(q,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()}))}],[[42,1,2]]]);
//# sourceMappingURL=main.96312155.chunk.js.map